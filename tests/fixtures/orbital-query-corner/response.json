{
  "status": "success",
  "message": "",
  "http_code": 200,
  "data": {
    "type": "messages",
    "list_item_type": "message",
    "size": 10,
    "items": [
      {
        "type": "message",
        "view_href": "https://community.cisco.com/t5/security-documents/orbital-query-corner-orbiting-the-cloud-s/ta-p/4452743",
        "subject": "Orbital Query Corner - Orbiting the Cloud(s)",
        "body": "<P><EM><SPAN>Oh! I have slipped the surly bonds of Earth</SPAN><BR /><SPAN>And danced the skies on laughter-silvered wings;</SPAN><BR /><SPAN>Sunward I’ve climbed, and joined the tumbling mirth</SPAN><BR /><SPAN>Of sun-split clouds, – and done a hundred things</SPAN><BR /><SPAN>You have not dreamed of – wheeled and soared and swung</SPAN><BR /><SPAN>High in the sunlit silence.</SPAN></EM></P>\n<P>— Excerpt from \"High Flight\" by&nbsp;John Gillespie Magee [0]</P>\n<H1 id=\"toc-hId--1161399784\">Introduction: Into the Clouds!</H1>\n<P>Recently, we've had a series of Orbital Query Corner articles whose starting point is some kind of immediate vulnerability or threat advisory requiring urgent attention. &nbsp;This will <EM>not</EM> be one of those. &nbsp;Instead, the purpose of this article is to briefly explore a set of osquery [1] tables that we recently discovered here at Query Corner Headquarters, providing metadata for instances running in the AWS and Azure clouds.</P>\n<H1 id=\"toc-hId-1326113049\">Querying an AWS EC2 Instance</H1>\n<P>If your cloud provider of choice is Amazon, then the table you want is called ec2_instance_metadata, and the simplest way to use it is a custom query like this:</P>\n<PRE>SELECT * FROM ec2_instance_metadata;</PRE>\n<P>And the results look like this:</P>\n<P><span class=\"lia-inline-image-display-wrapper lia-image-align-inline\" image-alt=\"metadata-ec2.png\" style=\"width: 999px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/128451i6D68C8D8CC2DD31D/image-size/large?v=v2&amp;px=999\" role=\"button\" title=\"metadata-ec2.png\" alt=\"metadata-ec2.png\" /></span></P>\n<P>Notice that we have two Orbital nodes in our test environment, one EC2 instance and another named \"Win1\" that returned no results. &nbsp;We'll get back to that node in a minute, but for&nbsp;the things that do return results, the columns are as follows [2]:</P>\n<P>&nbsp;</P>\n<TABLE border=\"1\" width=\"100%\">\n<TBODY>\n<TR>\n<TD width=\"50%\"><STRONG>Column Name</STRONG></TD>\n<TD width=\"50%\"><STRONG>Description</STRONG></TD>\n</TR>\n<TR>\n<TD width=\"50%\">instance_id</TD>\n<TD width=\"50%\">EC2 instance ID</TD>\n</TR>\n<TR>\n<TD width=\"50%\">instance_type</TD>\n<TD width=\"50%\">EC2 instance type</TD>\n</TR>\n<TR>\n<TD width=\"50%\">architecture</TD>\n<TD width=\"50%\">Hardware architecture of this EC2 instance</TD>\n</TR>\n<TR>\n<TD width=\"50%\">region</TD>\n<TD width=\"50%\">AWS region in which this instance launched</TD>\n</TR>\n<TR>\n<TD width=\"50%\">availability_zone</TD>\n<TD width=\"50%\">Availability zone in which this instance launched</TD>\n</TR>\n<TR>\n<TD width=\"50%\">local_hostname</TD>\n<TD width=\"50%\">Private IPv4 DNS hostname of the first interface of this instance</TD>\n</TR>\n<TR>\n<TD width=\"50%\">local_ipv4</TD>\n<TD width=\"50%\">Private IPv4 address of the first interface of this instance</TD>\n</TR>\n<TR>\n<TD width=\"50%\">mac</TD>\n<TD width=\"50%\">MAC address for the first network interface of this EC2 instance</TD>\n</TR>\n<TR>\n<TD width=\"50%\">security_groups</TD>\n<TD width=\"50%\">Comma separated list of security group names</TD>\n</TR>\n<TR>\n<TD>iam_arn</TD>\n<TD>If there is an IAM role associated with the instance, contains instance profile ARN</TD>\n</TR>\n<TR>\n<TD>ami_id</TD>\n<TD>AMI ID used to launch this EC2 instance</TD>\n</TR>\n<TR>\n<TD>reservation_id</TD>\n<TD>ID of the reservation</TD>\n</TR>\n<TR>\n<TD>account_id</TD>\n<TD>AWS account ID which owns this EC2 instance</TD>\n</TR>\n<TR>\n<TD>ssh_public_key</TD>\n<TD>SSH public key. Only available if supplied at instance launch time</TD>\n</TR>\n</TBODY>\n</TABLE>\n<P>&nbsp;</P>\n<H1 id=\"toc-hId--481341414\">Querying an Azure Instance</H1>\n<P>If you're using Microsoft Azure as your cloud provider, the process is very similar – except when it's not, which we'll address in just a minute. &nbsp;Our custom query now looks like this:</P>\n<PRE>SELECT * FROM azure_instance_metadata;</PRE>\n<P>And here are the results:</P>\n<P><span class=\"lia-inline-image-display-wrapper lia-image-align-inline\" image-alt=\"metadata-azure.png\" style=\"width: 999px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/128452i1F165B57D3D30EBB/image-size/large?v=v2&amp;px=999\" role=\"button\" title=\"metadata-azure.png\" alt=\"metadata-azure.png\" /></span></P>\n<P>In this case, the situation is reversed: Win1, running in Azure, returns results while our ES2 instance (unsurprisingly) does not; the Azure response columns are as follows [3]:</P>\n<P>&nbsp;</P>\n<TABLE border=\"1\" width=\"100%\">\n<TBODY>\n<TR>\n<TD><STRONG>Column Name</STRONG></TD>\n<TD><STRONG>Description</STRONG></TD>\n</TR>\n<TR>\n<TD width=\"50%\">location</TD>\n<TD width=\"50%\">Azure Region the VM is running in</TD>\n</TR>\n<TR>\n<TD width=\"50%\">name</TD>\n<TD width=\"50%\">Name of the VM</TD>\n</TR>\n<TR>\n<TD width=\"50%\">offer</TD>\n<TD width=\"50%\">Offer information for the VM image (Azure image gallery VMs only)</TD>\n</TR>\n<TR>\n<TD width=\"50%\">publisher</TD>\n<TD width=\"50%\">Publisher of the VM image</TD>\n</TR>\n<TR>\n<TD width=\"50%\">sku</TD>\n<TD width=\"50%\">SKU for the VM image</TD>\n</TR>\n<TR>\n<TD width=\"50%\">version</TD>\n<TD width=\"50%\">Version of the VM image</TD>\n</TR>\n<TR>\n<TD width=\"50%\">os_type</TD>\n<TD width=\"50%\">Linux or Windows</TD>\n</TR>\n<TR>\n<TD width=\"50%\">platform_update_domain</TD>\n<TD width=\"50%\">Update domain the VM is running in</TD>\n</TR>\n<TR>\n<TD width=\"50%\">platform_fault_domain</TD>\n<TD width=\"50%\">Fault domain the VM is running in</TD>\n</TR>\n<TR>\n<TD width=\"50%\">vm_id</TD>\n<TD width=\"50%\">Unique identifier for the VM</TD>\n</TR>\n<TR>\n<TD>vm_size</TD>\n<TD>VM size</TD>\n</TR>\n<TR>\n<TD>subscription_id</TD>\n<TD>Azure subscription for the VM</TD>\n</TR>\n<TR>\n<TD>resource_group_name</TD>\n<TD>Resource group for the VM</TD>\n</TR>\n<TR>\n<TD>placement_group_id</TD>\n<TD>Placement group for the VM scale set</TD>\n</TR>\n<TR>\n<TD>vm_scale_set_name</TD>\n<TD>VM scale set name</TD>\n</TR>\n<TR>\n<TD>zone</TD>\n<TD>Availability zone of the VM</TD>\n</TR>\n</TBODY>\n</TABLE>\n<DIV>&nbsp;</DIV>\n<H1 id=\"toc-hId-2006171419\">Okay, So Now What?</H1>\n<P>Well, as we can see from the column layouts of the respective tables, each cloud environment exposes some different types of potentially useful metadata. &nbsp;For example, in Azure, you can use the vm_id, which is the same as the system's UUID, to pull in information from other tables. &nbsp;Just as a quick illustration (and to prove to ourselves that this actually works), here we're combining a few items from the system_info table with the Azure metadata table:</P>\n<PRE>SELECT name, vm_id AS uuid, si.cpu_brand, si.cpu_logical_cores, si.hardware_model FROM azure_instance_metadata JOIN system_info si;</PRE>\n<P><span class=\"lia-inline-image-display-wrapper lia-image-align-inline\" image-alt=\"azure-join-uuid2.png\" style=\"width: 999px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/128454i026A0262DFB69FA7/image-size/large?v=v2&amp;px=999\" role=\"button\" title=\"azure-join-uuid2.png\" alt=\"azure-join-uuid2.png\" /></span></P>\n<P>This may not be immediately useful (yet) , but it's nice to know that it actually works as expected!</P>\n<P>Unfortunately, there's no UUID equivalent in the AWS EC2 metadata, but there are other items of potential interest, like the MAC address, IPv4 address, and local hostname associated with the first network interface on the instance. &nbsp;</P>\n<H1 id=\"toc-hId-198716956\">How About Tags?</H1>\n<P>In addition to the metadata tables, there are also osquery tables for tags applied to the instances. &nbsp;The names of these tables are, not very surprisingly, ec2_instance_tags and azure_instance_tags for the respective services. &nbsp;But there's a catch for AWS, at least for the moment. &nbsp;Retrieving the tags of an EC2 instance requires authenticated access with the permission to perform the ec2:DescribeTags action, according to the osquery configuration docs [4], and there is currently no way to provide those credentials from within Orbital. &nbsp;(We'll let you know if and when that changes.)</P>\n<P>Azure has no such requirement, and so for a simple proof-of-concept test, we applied a tag to our Win1 instance in the Azure Portal.</P>\n<P><span class=\"lia-inline-image-display-wrapper lia-image-align-inline\" image-alt=\"azuretag-console.png\" style=\"width: 486px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/128455i0A9CB1269B48434E/image-size/large?v=v2&amp;px=999\" role=\"button\" title=\"azuretag-console.png\" alt=\"azuretag-console.png\" /></span></P>\n<P>We ran a query:</P>\n<PRE>SELECT * FROM azure_instance_tags;</PRE>\n<P>And got this:</P>\n<P><span class=\"lia-inline-image-display-wrapper lia-image-align-inline\" image-alt=\"azuretag-query.png\" style=\"width: 999px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/128456i70F040DD1953BA47/image-size/large?v=v2&amp;px=999\" role=\"button\" title=\"azuretag-query.png\" alt=\"azuretag-query.png\" /></span></P>\n<H1 id=\"toc-hId--1608737507\">But What If I Use Both Clouds?</H1>\n<P>Okay, last exercise on this little jaunt through the world of cloud queries. &nbsp;Suppose we have instances running in both AWS and Azure, and want to get some common info on both environments at the same time? &nbsp;For example, both services report very similar location information for which region (and availability zone) an instance runs in. &nbsp;The names, of course, are not exactly the same, so we can't use a JOIN in this case. &nbsp;Instead, we'll use a UNION to combine the results from both tables.</P>\n<P>Here's the trick:</P>\n<PRE>SELECT location FROM azure_instance_metadata<BR />UNION<BR />SELECT region AS location FROM ec2_instance_metadata;</PRE>\n<P><BR />With the following results:</P>\n<P><span class=\"lia-inline-image-display-wrapper lia-image-align-inline\" image-alt=\"union-locations.png\" style=\"width: 999px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/128457i78EFD35DF88E3C0E/image-size/large?v=v2&amp;px=999\" role=\"button\" title=\"union-locations.png\" alt=\"union-locations.png\" /></span></P>\n<P>And that's about it for this edition of Orbital Query Corner. &nbsp;We hope that you found it interesting, and perhaps even useful. &nbsp;We hope to see you all again soon, around the&nbsp;<EM>next</EM> Query Corner!</P>\n<H1 id=\"toc-hId-878775326\">Links and References</H1>\n<P>[0] <A href=\"https://nationalpoetryday.co.uk/poem/high-flight/\" target=\"_self\" rel=\"nofollow noopener noreferrer\">High Flight</A></P>\n<P>[1] <A href=\"https://orbital.amp.cisco.com/help/what-is-osquery/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">Orbital Help: What Is Osquery</A></P>\n<P>[2] <A href=\"https://github.com/osquery/osquery/blob/d2be385d71f401c85872f00d479df8f499164c5a/specs/ec2_instance_metadata.table\" target=\"_self\" rel=\"nofollow noopener noreferrer\">osquery/specs/ec2_instance_metadata.table</A> on GitHub</P>\n<P>[3] <A href=\"https://github.com/osquery/osquery/blob/d2be385d71f401c85872f00d479df8f499164c5a/specs/azure_instance_metadata.table\" target=\"_self\" rel=\"nofollow noopener noreferrer\">osquery/specs/azure_instance_metadata.table</A> on GitHub</P>\n<P>[4]&nbsp;<A href=\"https://osquery.readthedocs.io/en/stable/deployment/configuration/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">https://osquery.readthedocs.io/en/stable/deployment/configuration/</A></P>\n<P>&nbsp;</P>",
        "post_time": "2021-08-23T10:26:17.913-07:00"
      },
      {
        "type": "message",
        "view_href": "https://community.cisco.com/t5/security-documents/orbital-query-corner-responding-to-the-solarwinds-orion/tac-p/4450219#M7332",
        "subject": "Re: Orbital Query Corner - Responding to the SolarWinds Orion Compromi",
        "body": "<P>Users will now find this and other Orbital query corner queries available on the Orbital query page as \"Featured Queries\"&nbsp;<A href=\"https://orbital.amp.cisco.com/query\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">https://orbital.amp.cisco.com/query.</A></P>\n<P><span class=\"lia-inline-image-display-wrapper lia-image-align-left\" image-alt=\"featured-queries-prod-081621.png\" style=\"width: 999px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/128107i81ECEE28CE0812C4/image-size/large?v=v2&amp;px=999\" role=\"button\" title=\"featured-queries-prod-081621.png\" alt=\"featured-queries-prod-081621.png\" /></span></P>\n<DIV id=\"tinyMceEditordersnide_0\" class=\"mceNonEditable lia-copypaste-placeholder\">&nbsp;</DIV>\n<P>&nbsp;</P>",
        "post_time": "2021-08-16T18:13:34.155-07:00"
      },
      {
        "type": "message",
        "view_href": "https://community.cisco.com/t5/security-blogs/orbital-query-corner-update/ba-p/4440510",
        "subject": "Orbital Query Corner - Update",
        "body": "<P>\"What is this 'Orbital Query Corner' thing\", you ask? &nbsp;It's the name of an occasional series of articles, each discussing one particular point or use case for the Orbital advanced search feature that is available in Cisco Secure Endpoint starting at the Advantage level.</P>\n<P>The idea behind this series is that, while Orbital is a tremendously powerful tool, it may seem like a daunting thing to get to know, especially if you don't happen to be a guru-level expert in both SQL-style queries and Windows internals. &nbsp;These documents are intended to explore ways to use the power of Orbital in small bite-sized pieces; sometimes the topic will be driven by current events, and sometimes the theme will be a bit more general, but always kept short and informal.</P>\n<P>To make it a bit easier to keep track of things, this blog post summarizes the Orbital Query Corner articles to date.</P>\n<TABLE border=\"1\" width=\"100%\">\n<THEAD>\n<TR>\n<TD height=\"30px\"><STRONG>Date Posted</STRONG></TD>\n<TD height=\"30px\"><STRONG>Title/Link</STRONG></TD>\n<TD height=\"30px\"><STRONG>Theme/Content Summary</STRONG></TD>\n</TR>\n</THEAD>\n<TBODY>\n<TR>\n<TD>July 15 2020</TD>\n<TD><SPAN><A href=\"https://community.cisco.com/t5/security-documents/orbital-query-corner-why-does-malware-keep-coming-back/ta-p/4118854\" target=\"_blank\">Why does $malware keep coming back?</A></SPAN></TD>\n<TD>Searching for scheduled tasks, a common attack <A href=\"https://attack.mitre.org/techniques/T1053/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">persistence technique</A></TD>\n</TR>\n<TR>\n<TD width=\"33.333333333333336%\" height=\"30px\">July 30 2020</TD>\n<TD width=\"33.333333333333336%\" height=\"30px\"><A href=\"https://community.cisco.com/t5/security-documents/orbital-query-corner-hunting-wmi-based-backdoor-mechanisms/ta-p/4127019\" target=\"_blank\"><SPAN>Hunting WMI based backdoor mechanisms</SPAN></A></TD>\n<TD width=\"33.333333333333336%\" height=\"30px\">Another threat hunt, this time for <A href=\"https://attack.mitre.org/techniques/T1047/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">WMI event filters</A></TD>\n</TR>\n<TR>\n<TD width=\"33.333333333333336%\" height=\"30px\">August 14 2020</TD>\n<TD width=\"33.333333333333336%\" height=\"30px\"><A href=\"https://community.cisco.com/t5/security-documents/orbital-query-corner-hunting-rats/ta-p/4131443\" target=\"_blank\"><SPAN>Hunting RATs</SPAN></A></TD>\n<TD width=\"33.333333333333336%\" height=\"30px\">Looking for signs of Remote Access Trojan (RAT) activity</TD>\n</TR>\n<TR>\n<TD width=\"33.333333333333336%\" height=\"30px\">December 17 2020</TD>\n<TD width=\"33.333333333333336%\" height=\"30px\"><A href=\"https://community.cisco.com/t5/security-documents/orbital-query-corner-responding-to-the-solarwinds-orion/ta-p/4260429\" target=\"_blank\"><SPAN>Responding to the SolarWinds Orion Compromise</SPAN></A></TD>\n<TD width=\"33.333333333333336%\" height=\"30px\">How to search for vulnerable software versions</TD>\n</TR>\n<TR>\n<TD width=\"33.333333333333336%\" height=\"30px\">July 16 2021</TD>\n<TD width=\"33.333333333333336%\" height=\"30px\"><A href=\"https://community.cisco.com/t5/security-documents/orbital-query-corner-two-views-of-printnightmare/ta-p/4434140\" target=\"_blank\"><SPAN>Two Views of PrintNightmare</SPAN></A></TD>\n<TD width=\"33.333333333333336%\" height=\"30px\">Checking for vulnerable services and verifying mitigations</TD>\n</TR>\n<TR>\n<TD>July 27 2021</TD>\n<TD><A href=\"https://community.cisco.com/t5/security-documents/orbital-query-corner-checking-windows-acls-for-cve-2021-36934/ta-p/4437569\" target=\"_blank\"><SPAN>Checking Windows ACLs for CVE-2021-36934</SPAN></A></TD>\n<TD>Checking file ACLs and VSS to verify Microsoft's recommended mitigations</TD>\n</TR>\n</TBODY>\n</TABLE>",
        "post_time": "2021-07-28T09:43:11.346-07:00"
      },
      {
        "type": "message",
        "view_href": "https://community.cisco.com/t5/security-documents/orbital-query-corner-checking-windows-acls-for-cve-2021-36934/ta-p/4437569",
        "subject": "Orbital Query Corner - Checking Windows ACLs for CVE-2021-36934",
        "body": "<DIV class=\"lia-message-template-content-zone\">\n<H1 id=\"toc-hId--1163099725\">0. The Issue</H1>\n<P>On 20 July 2021, Microsoft issued an alert for&nbsp;<SPAN>CVE-2021-36934 \"Windows Elevation of Privilege Vulnerability\". [1] &nbsp;The problem in this case is an overly permissive Access Control List (ACL) applied to system files, including the Security Accounts Manager (SAM) database. &nbsp;The workaround recommended by Microsoft is to manually fix the ACL settings and to remove VSS shadow copies on the affected system, because the shadow copies may include copies of the SAM database with the permissive ACL still applied.</SPAN></P>\n<P><SPAN>The focus of this short Orbital Query Corner is how to verify ACL settings in an Orbital query.</SPAN></P>\n<H1 id=\"toc-hId-1324413108\"><SPAN>1. The Query</SPAN></H1>\n<P><SPAN>Here it is:</SPAN></P>\n<PRE><SPAN>SELECT</SPAN><BR /><SPAN><SPAN class=\"Apple-converted-space\">&nbsp; &nbsp; &nbsp; </SPAN>path, type, principal, access, inherited_from</SPAN><BR /><SPAN><SPAN class=\"Apple-converted-space\">&nbsp; &nbsp; &nbsp; </SPAN>FROM ntfs_acl_permissions</SPAN><BR /><SPAN><SPAN class=\"Apple-converted-space\">&nbsp; &nbsp; &nbsp; </SPAN>WHERE</SPAN><BR /><SPAN><SPAN class=\"Apple-converted-space\">&nbsp; &nbsp; &nbsp; </SPAN>path = (SELECT value FROM orbital_environment WHERE name = \"windir\") || \"\\System32\\config\" AND</SPAN><BR /><SPAN><SPAN class=\"Apple-converted-space\">&nbsp; &nbsp; &nbsp; </SPAN>principal LIKE regex_match(principal, \"^((?!(SYSTEM|Administrators|TrustedInstaller|CREATOR OWNER)).)*$\", 0);</SPAN></PRE>\n<P><SPAN>We should spend a minute or two unpacking what's going on here, because there are a couple of cool things we can learn. &nbsp;First of all, if you've ever wondered how to use one of the Windows environment variables that point to important parts of the file system – in this case the %WINDIR% variable – here's the secret. &nbsp;Orbital has a special table, orbital_environment, that lets us access and use environment variables from the host. &nbsp;Combining the \"windir\" variable with the rest of the path to the affected system files lets us write proper file system queries. &nbsp;(Sure, the main Windows directory is <EM>usually</EM> \"C:\\Windows\", but why risk failure in cases when it's not?)</SPAN></P>\n<P><SPAN>Next, let's take a look at that regular expression (regex). &nbsp;Don't panic! &nbsp;It's not as bad as it might look at first. &nbsp;The important part is that we expect to find certain important entities (\"security principals\" to Microsoft) with access to system resources. &nbsp;What's less desirable is if someone else – like the general \"Users\" category in the case of&nbsp;CVE-2021-36934 is accidentally (or intentionally) granted more access than they should have. &nbsp;(For more information, see Microsoft's explanation of Security Principals. [2])&nbsp;</SPAN></P>\n<P>So, in this case, the purpose of the regex is to exclude from our query results any of the usual and expected items, like SYSTEM and Administrator. &nbsp;Anything that remains is something that we want to know about, and fix. &nbsp;(\"No results for this host\" is a very good answer.)</P>\n<H1 id=\"toc-hId--483041355\">2. What About VSS?</H1>\n<P>Now that we've checked (and possibly fixed) the over-broad ACL settings, what about the second part of Microsoft's recommended remediiation, namely clearing any volume shadow copies that retain the vulnerable settings? &nbsp;There's a table in orbiital that we need for that, Win32_ShadowCopy, built from WMI and freshly added to Orbital in the 4.8.0 update. [3]&nbsp;</P>\n<P>With that new piece in place, here's how to use it:</P>\n<PRE>SELECT\n      DeviceObject,\n      VolumeName,\n      Win32_Volume.DriveLetter,\n      CASE ExposedLocally\n      WHEN \"0\" THEN \"False\"\n      ELSE \"True\"\n      END exposed_locally,\n      ExposedName,\n      ExposedPath,\n      CASE ExposedRemotely\n      WHEN \"0\" THEN \"False\"\n      ELSE \"True\"\n      END exposed_remotely,\n      ID,\n      DATETIME(InstallDate, \"unixepoch\", \"UTC\") AS install_date,\n      OriginatingMachine,\n      CASE Persistent\n      WHEN \"0\" THEN \"False\"\n      ELSE \"True\"\n      END persistent_across_reboots,\n      ServiceMachine\n      FROM Win32_ShadowCopy\n      JOIN Win32_Volume ON Win32_ShadowCopy.VolumeName=Win32_Volume.DeviceID;</PRE>\n<H1 id=\"toc-hId-2004471478\">Still Want More?</H1>\n<P>For further reading, we recommend the very detailed write-up of this vulnerability at CERT [4].</P>\n<H1 id=\"toc-hId-197017015\">Credits</H1>\n<P>This article would not have been possible without the assistance of Sasha Mozil in the Research and Efficacy (RET) team, who is the source of both of the finely-crafted queries shown above.</P>\n<H1 id=\"toc-hId--1610437448\"><SPAN>Links and References</SPAN></H1>\n<P><SPAN>[1]&nbsp;<A href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-36934\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-36934</A></SPAN></P>\n<P>[2]&nbsp;<A href=\"https://docs.microsoft.com/en-us/windows/security/identity-protection/access-control/security-principals\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">https://docs.microsoft.com/en-us/windows/security/identity-protection/access-control/security-principals</A></P>\n<P>[3]&nbsp;<A href=\"https://orbital.amp.cisco.com/help/updates/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">https://orbital.amp.cisco.com/help/updates/</A></P>\n<P>[4]&nbsp;<A href=\"https://www.kb.cert.org/vuls/id/506989\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">https://www.kb.cert.org/vuls/id/506989</A></P>\n<P>&nbsp;</P>\n<P>&nbsp;</P>\n</DIV>",
        "post_time": "2021-07-27T08:38:58.418-07:00"
      },
      {
        "type": "message",
        "view_href": "https://community.cisco.com/t5/security-documents/orbital-query-corner-two-views-of-printnightmare/ta-p/4434140",
        "subject": "Orbital Query Corner - Two Views of PrintNightmare",
        "body": "<DIV class=\"lia-message-template-content-zone\">\n<H1 id=\"toc-hId--1163193013\">Part 1: The Basics</H1>\n<P>Hard-copy printing may feel very “old school” now, but a recent flurry of activity related to the print spooler service on Windows operating systems has brought one of the oldest IT applications back into the spotlight again.<SPAN>&nbsp; </SPAN>Our Talos team has a detailed discussion in their blog post titled “PrintNightmare: Here’s what you need to know and Talos’ coverage”. [1] &nbsp;</P>\n<P>Microsoft’s guidance for the issue is titled “Windows Print Spooler Remote Code Execution Vulnerability”, [2] for CVE-2021-34527.</P>\n<P>Since this vulnerability is being actively exploited, of course now is an excellent time to devote a bit of attention to figuring out where in our environments we might have this service enabled.<SPAN>&nbsp; </SPAN>And, of course, an Orbital search is a quick way of getting an answer to that question.<SPAN>&nbsp; </SPAN>In Orbital’s catalog of prebuilt queries, there’s a very convenient generic search for Windows services.</P>\n<P><span class=\"lia-inline-image-display-wrapper lia-image-align-inline\" image-alt=\"pn01 catalog services.png\" style=\"width: 999px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/125363i81AD243679A844E0/image-size/large?v=v2&amp;px=999\" role=\"button\" title=\"pn01 catalog services.png\" alt=\"pn01 catalog services.png\" /></span></P>\n<P>&nbsp;</P>\n<P>In the catalog description for this search, take note of the cautionary text:</P>\n<P><span class=\"lia-inline-image-display-wrapper lia-image-align-inline\" image-alt=\"pn02 query caution.png\" style=\"width: 999px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/125364iF0F107795DDAA333/image-size/large?v=v2&amp;px=999\" role=\"button\" title=\"pn02 query caution.png\" alt=\"pn02 query caution.png\" /></span></P>\n<P>&nbsp;</P>\n<P>Fortunately, the query is built to make it easy to restrict the scope with an additional parameter.<SPAN>&nbsp; </SPAN>Here’s how that looks.</P>\n<P><span class=\"lia-inline-image-display-wrapper lia-image-align-inline\" image-alt=\"pn03 spooler param.png\" style=\"width: 400px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/125365iBFAE2045B183BC2E/image-size/medium?v=v2&amp;px=400\" role=\"button\" title=\"pn03 spooler param.png\" alt=\"pn03 spooler param.png\" /></span></P>\n<P>&nbsp;</P>\n<P>We enter “spooler” in the “Service Name” field, and the Catalog query will automatically pick that up when it runs.<SPAN>&nbsp; </SPAN>(In fact, the hardest part of this entire enumeration exercise may be knowing that Microsoft Windows uses the word “spooler” as the name for the Print Spooler service.)<SPAN>&nbsp; </SPAN>In the results, any systems that show up with the service status “Enabled” are potential targets for this vulnerability.<SPAN>&nbsp; </SPAN>If the system in question doesn’t need it, then the service should be disabled.<SPAN>&nbsp; </SPAN>The “Principle of Least Privilege” [3] is, after all, still excellent security advice: the bad guys can’t exploit something that’s not there.</P>\n<H1 id=\"toc-hId-1324319820\">Part 2: What If Things Aren't So Simple</H1>\n<P>Ah, but what if we have an endpoint – even a high-value endpoint, like maybe a server running financial applications – that still needs to run print services, at least locally?<SPAN>&nbsp; </SPAN>Well, for those cases, Microsoft’s recommendation [4] is to apply a Group Policy Object (GPO) to prevent the Spooler service from accepting inbound remote printing jobs.</P>\n<P><span class=\"lia-inline-image-display-wrapper lia-image-align-inline\" image-alt=\"pn04 mitigation.png\" style=\"width: 400px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/125366i48F67ABFC9E24E85/image-size/medium?v=v2&amp;px=400\" role=\"button\" title=\"pn04 mitigation.png\" alt=\"pn04 mitigation.png\" /></span></P>\n<P>So, getting back to Orbital, it’s easy to check if the first mitigation option has been applied to a system; just re-run the services query above and verify that the service state is now “Disabled”.<SPAN>&nbsp; </SPAN>But what about the GPO setting in the second option?<SPAN>&nbsp; </SPAN>Can we verify <EM>that</EM> in Orbital, too?</P>\n<P>&nbsp;</P>\n<P>Of course we can.<SPAN>&nbsp; </SPAN>All we need is the right path for a custom query against the registry, and here it is:</P>\n<PRE>SELECT key as reg_key, path, name, data, datetime(mtime,\"unixepoch\",\"UTC\") AS last_modified FROM registry WHERE key = \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\Printers\\\" AND name = \"RegisterSpoolerRemoteRpcEndPoint\";</PRE>\n<P>&nbsp;</P>\n<P>Here’s what the results from one such query look like:</P>\n<P><span class=\"lia-inline-image-display-wrapper lia-image-align-inline\" image-alt=\"pn05 gpo query.png\" style=\"width: 999px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/125367i68E8229EC3E27B7F/image-size/large?v=v2&amp;px=999\" role=\"button\" title=\"pn05 gpo query.png\" alt=\"pn05 gpo query.png\" /></span></P>\n<P>&nbsp;</P>\n<P>Notice that, for this test, we didn’t even bother with the name = \"RegisterSpoolerRemoteRpcEndPoint\" part.<SPAN>&nbsp; </SPAN>That’s because, in a typical environment, there won’t be a lot of printing-related GPOs configured in the first place.<SPAN>&nbsp; </SPAN>And, as you can see in the following screen capture from gpedit on our test system, “Not configured” in this case would mean that the system is, by default, willing to accept remote client connections (and therefore potentially vulnerable).<SPAN>&nbsp; </SPAN>The data value of “2” in our Orbital results means “Disabled”, so this confirms that the GPO mitigation has been applied here.</P>\n<P><span class=\"lia-inline-image-display-wrapper lia-image-align-inline\" image-alt=\"pn06 gpedit.png\" style=\"width: 999px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/125368i7E08220861FD7E82/image-size/large?v=v2&amp;px=999\" role=\"button\" title=\"pn06 gpedit.png\" alt=\"pn06 gpedit.png\" /></span></P>\n<P>&nbsp;</P>\n<H2 id=\"toc-hId-2014881294\">Reference Links</H2>\n<P><SPAN><A href=\"https://blog.talosintelligence.com/2021/07/printnightmare-coverage.html\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">[1] https://blog.talosintelligence.com/2021/07/printnightmare-coverage.html</A></SPAN></P>\n<P><SPAN><A href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">[2] https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527</A></SPAN></P>\n<P><SPAN><A href=\"https://csrc.nist.gov/glossary/term/principle_of_least_privilege\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">[3] https://csrc.nist.gov/glossary/term/principle_of_least_privilege</A></SPAN></P>\n<P><SPAN><A href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527#workarounds\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">[4] https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527#workarounds</A></SPAN></P>\n<P>&nbsp;</P>\n<P>&nbsp;</P>\n</DIV>",
        "post_time": "2021-07-16T14:43:10.759-07:00"
      },
      {
        "type": "message",
        "view_href": "https://community.cisco.com/t5/security-documents/orbital-query-corner-responding-to-the-solarwinds-orion/ta-p/4260429",
        "subject": "Orbital Query Corner - Responding to the SolarWinds Orion Compromise",
        "body": "<DIV class=\"lia-message-template-content-zone\">\n<H2 id=\"toc-hId-1280218102\" id=\"toc-hId-1280218851\"><SPAN>Emergency Directive 21-01</SPAN></H2>\n<P>On December 13th&nbsp;2020, in response to an advanced supply-chain attack [0] against SolarWinds Orion, the Cyber and Infrastructure Security Agency (CISA) of the U.S. Department of Homeland Security (DHS) released Emergency Directive 21-01, “Mitigate SolarWinds Orion Code Compromise”.<SPAN>&nbsp;[1]&nbsp;</SPAN>In this Query Corner, we discuss how Orbital Advanced Search can help with the actions listed in the CISA Directive.</P>\n<P>&nbsp;</P>\n<P>Required action 1 a reads as follows:</P>\n<P class=\"lia-indent-padding-left-30px\">Forensically image system memory and/or host operating systems hosting all instances of SolarWinds Orion versions 2019.4 through 2020.2.1 HF1]. Analyze for new user or service accounts, privileged or otherwise.</P>\n<P>&nbsp;</P>\n<P>Let’s break this down a bit.<SPAN>&nbsp; </SPAN>The first step, of course, is to identify systems running SolarWinds Orion.<SPAN>&nbsp; </SPAN>Presumably, an organization would be aware of where it had installed important network management tools; but are you <EM>sure</EM> your list is complete?<SPAN>&nbsp; </SPAN>Does it include other groups that might have procured a tool for their own use, or even just an evaluation or proof-of-concept?<SPAN>&nbsp; </SPAN>Fortunately, we don’t have to guess, because Orbital makes it easy to inventory installed software assets.<SPAN>&nbsp; </SPAN>In the Query Catalog, the query titled “Installed Programs On Windows Host” is exactly what we’re looking for.</P>\n<DIV id=\"tinyMceEditorbrmcmaho_0\" class=\"mceNonEditable lia-copypaste-placeholder\">&nbsp;</DIV>\n</DIV>\n<P><span class=\"lia-inline-image-display-wrapper lia-image-align-inline\" image-alt=\"catalog-programs.png\" style=\"width: 999px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/99804iD0993AC25FE7EDF8/image-size/large?v=v2&amp;px=999\" role=\"button\" title=\"catalog-programs.png\" alt=\"catalog-programs.png\" /></span></P>\n<P>As you can see, this query gives us a lot of detail about the installed software on the targeted hosts.<SPAN>&nbsp;In particular, note that it includes the installed version in the report, so we can quickly identify any hosts running the affected versions, as specified in the CISA Directive.</SPAN></P>\n<H2 id=\"toc-hId--527236361\" id=\"toc-hId--527235612\"><SPAN>Narrowing the Focus</SPAN></H2>\n<P>We can also use the catalog query as the starting point for a more focused search, by adding a condition. &nbsp;There is a handly little button in the query catalog window to copy the query so we can modify it:</P>\n<P><span class=\"lia-inline-image-display-wrapper lia-image-align-inline\" image-alt=\"catalog-edit.png\" style=\"width: 400px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/99805i338848BA91856FE6/image-size/medium?v=v2&amp;px=400\" role=\"button\" title=\"catalog-edit.png\" alt=\"catalog-edit.png\" /></span></P>\n<P><SPAN>Then we can paste the copied text into the custom query window and modify it. &nbsp;We'll look only for a specific publisher and the range of versions identified as affected (starting with 2019.4 according to the advisory).</SPAN></P>\n<P><SPAN><span class=\"lia-inline-image-display-wrapper lia-image-align-inline\" image-alt=\"program-version.png\" style=\"width: 400px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/99806i305B38187C2FDC75/image-size/medium?v=v2&amp;px=400\" role=\"button\" title=\"program-version.png\" alt=\"program-version.png\" /></span></SPAN></P>\n<H2 id=\"toc-hId-1960276472\" id=\"toc-hId-1960277221\">Looking for New Accounts</H2>\n<P>Now that we have identified potentially affected systems, we can run a new query on those endpoints, as specified in the CISA Directive, to list user and service accounts, looking for any suspicious modifications. &nbsp;Again, there is a prebuilt query in the catalog to get us started.</P>\n<P><span class=\"lia-inline-image-display-wrapper lia-image-align-inline\" image-alt=\"catalog-users.png\" style=\"width: 999px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/99807iA56B94B39A8D8040/image-size/large?v=v2&amp;px=999\" role=\"button\" title=\"catalog-users.png\" alt=\"catalog-users.png\" /></span></P>\n<P>&nbsp;</P>\n<P><SPAN>And here are the results of a query on a Windows 10 test system. &nbsp;Notice that, despite the name, a \"</SPAN><STRONG>users</STRONG><SPAN>\" query returns both user and virtual service accounts.</SPAN></P>\n<P><SPAN><span class=\"lia-inline-image-display-wrapper lia-image-align-inline\" image-alt=\"user-catalog-query.png\" style=\"width: 999px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/99808iA7B3F7B2DD8CF018/image-size/large?v=v2&amp;px=999\" role=\"button\" title=\"user-catalog-query.png\" alt=\"user-catalog-query.png\" /></span></SPAN></P>\n<P>&nbsp;</P>\n<P><SPAN>So, with a few minutes of work in the Orbital Query catalog, we were able to quickly identify any systems that might be affected by the Emergency Directive, and conduct the required audit of accounts present on those systems. &nbsp;No memory dump required!&nbsp;</SPAN></P>\n<P>&nbsp;</P>\n<P>For another Orbital angle on the Solarwinds Orion issue, check out Jason Maynard's Orbital Threat Hunting video on YouTube. [2] &nbsp;Cisco is tracking this issue on a Security Event Response page [3].</P>\n<P>&nbsp;</P>\n<P><SPAN>[0]&nbsp;<A href=\"https://blog.talosintelligence.com/2020/12/solarwinds-supplychain-coverage.html\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">https://blog.talosintelligence.com/2020/12/solarwinds-supplychain-coverage.html</A></SPAN></P>\n<P><SPAN>[1]&nbsp;</SPAN><SPAN><A href=\"https://cyber.dhs.gov/ed/21-01/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">https://cyber.dhs.gov/ed/21-01/</A></SPAN></P>\n<P><SPAN>[2]&nbsp;<A href=\"https://youtu.be/hr1WWfrw51o\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">https://youtu.be/hr1WWfrw51o</A></SPAN></P>\n<P>[3]&nbsp;<A href=\"https://tools.cisco.com/security/center/resources/solarwinds_orion_event_response\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://tools.cisco.com/security/center/resources/solarwinds_orion_event_response</A></P>\n<P>&nbsp;</P>",
        "post_time": "2020-12-17T16:56:51.775-08:00"
      },
      {
        "type": "message",
        "view_href": "https://community.cisco.com/t5/security-documents/orbital-query-corner-hunting-rats/ta-p/4131443",
        "subject": "Orbital Query Corner - Hunting RATs",
        "body": "<P><span class=\"lia-inline-image-display-wrapper lia-image-align-center\" image-alt=\"04040402 transition to cloud collage 1.png\" style=\"width: 400px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/104201i606404648874DBFF/image-size/medium?v=v2&amp;px=400\" role=\"button\" title=\"04040402 transition to cloud collage 1.png\" alt=\"04040402 transition to cloud collage 1.png\" /></span></P>\n<P><ul =\"\"><li style=\"list-style-type:disc; margin-left:0px; margin-bottom:1px;\"><a href=\"https://community.cisco.com/t5/security-documents/orbital-query-corner-hunting-rats/ta-p/4131443#toc-hId--1249166953\">What is a RAT?</a></li><li style=\"list-style-type:disc; margin-left:0px; margin-bottom:1px;\"><a href=\"https://community.cisco.com/t5/security-documents/orbital-query-corner-hunting-rats/ta-p/4131443#toc-hId-1238345880\">Create A Profile:</a></li><li style=\"list-style-type:disc; margin-left:0px; margin-bottom:1px;\"><a href=\"https://community.cisco.com/t5/security-documents/orbital-query-corner-hunting-rats/ta-p/4131443#toc-hId--569108583\">Wrap Up</a></li></ul></P>\n<DIV class=\"lia-message-template-content-zone\">\n<P><BR />What's worse than a RAT? Multiple!</P>\n<H1 id=\"toc-hId--1249166953\">What is a RAT?</H1>\n<P>RATs are also known as Remote Access Trojans. They allow attackers to place backdoors on infected system. This gives them a foothold into your environment to further their attack to monitor keystrokes, collect video footage from webcams and upload/execute follow-on malware.</P>\n<P>&nbsp;</P>\n<P>Now you suspect that there may be RAT in your network but are unsure of where or you want to keep an eye on things, but you have hundreds of Endpoints to check to make sure they are not infected. Where do you start? Using TALOS and Cisco Orbital, we can narrow down the list of commands you want to first run when hunting RATS.</P>\n<H1 id=\"toc-hId-1238345880\">Create A Profile:</H1>\n<P>So, before we start running Orbital commands or pour through the hundreds of available queries we should first create a baseline of what commands we should be running and what of those is actual helpful?&nbsp; Let’s build a profile for what we are hunting and to get us moving, we are going to look at the behavior of a few different RATS:</P>\n<P>&nbsp;</P>\n<UL>\n<LI>Gh0stRAT [Win.Dropper.Gh0stRAT-9111297-0] is a fairly well-known RAT that has been out for quite some time. [1]</LI>\n<LI>Remcos [Win.Trojan.Remcos-8699084-0]&nbsp; is a closed-source tool that is marketed as a remote control and surveillance software by a company called Breaking Security. [2][3]</LI>\n<LI>NetWire [Win.Packed.NetWire-8705629-0] is an open-source tool that normally uses a “sales” themed dropper. [2][3]</LI>\n</UL>\n<P>&nbsp;</P>\n<P>In this particular situation we are going to model our criteria around these. Hopping on over to TALOS, we can get a bit more information on these RATs including file Hashes, Coverage, IOCs, Registry Keys and so forth. In addition to these, we also need to know how to hunt for it and where to look. TALOS lists out the categories of MITRE ATT&amp;CK TECHNIQUEs highlighted in Blue that we will look at. There are of course more than just these to consider. You can take these as a starting point and overlay other attack techniques to make a \"profile\" of what to look for later on.</P>\n<P>&nbsp;</P>\n<P>MITRE ATT&amp;CK TECHNIQUES of each RAT:</P>\n<P>&nbsp;</P>\n<P>Gh0stRAT:</P>\n<P class=\"lia-indent-padding-left-30px\">EXECUTION - command-line interface, services execution,</P>\n<P class=\"lia-indent-padding-left-30px\">PERSISTENCE - Registry run keys / startup folder, service registry permissions weakness</P>\n<P class=\"lia-indent-padding-left-30px\">PRIVILEGE ESCALTION - extra window memory injection , process injection, service registry permissions weakness</P>\n<P class=\"lia-indent-padding-left-30px\">DEFENSE EVASION - extra window memory injection, file deletion, indirect command execution, modify registry, obfuscated files or information, Process injection, web service</P>\n<P class=\"lia-indent-padding-left-30px\">COMMAND AND CONTROL - web service</P>\n<P>&nbsp;</P>\n<P>Remcos:</P>\n<P class=\"lia-indent-padding-left-30px\">EXECUTION - command-line interface, scripting</P>\n<P class=\"lia-indent-padding-left-30px\">PERSISTENCE - hooking, registry run keys / startup folder</P>\n<P class=\"lia-indent-padding-left-30px\">PRIVILEGE ESCALTION - extra window memory injection, hooking, process injection</P>\n<P class=\"lia-indent-padding-left-30px\">DEFENSE EVASION - extra window memory injection, file deletion, indirect command execution, obfuscated files or information, Process injection, scripting</P>\n<P class=\"lia-indent-padding-left-30px\">CREDENTIAL ACCESS - hooking, input capture</P>\n<P class=\"lia-indent-padding-left-30px\">DISCOVERY - process discovery</P>\n<P class=\"lia-indent-padding-left-30px\">LATERAL MOVEMENT - remote file copy</P>\n<P class=\"lia-indent-padding-left-30px\">COLLECTION - audio capture, input capture, screen capture, video capture</P>\n<P class=\"lia-indent-padding-left-30px\">COMMAND AND CONTROL - failback channels, remote file copy</P>\n<P>&nbsp;</P>\n<P>NetWire:</P>\n<P class=\"lia-indent-padding-left-30px\">PERSISTENCE - Registry run keys / startup folder,</P>\n<P class=\"lia-indent-padding-left-30px\">PRIVILEGE ESCALTION - extra window memory injection , process injection</P>\n<P class=\"lia-indent-padding-left-30px\">DEFENSE EVASION - extra window memory injection, indirect command execution, obfuscated files or information, Process injection,</P>\n<P>&nbsp;</P>\n<P>Taking a look at all threes profile we can see we have quite a bit of overlap in their MITRE ATT&amp;CK techniques. Between just these three it would be worth looking at the following categories:</P>\n<P>&nbsp;</P>\n<P class=\"lia-indent-padding-left-30px\">PERSISTENCE - registry run keys / start up folder</P>\n<P class=\"lia-indent-padding-left-30px\">PRIVILEGE ESCALTION - extra window memory injection , process injection</P>\n<P class=\"lia-indent-padding-left-30px\">DEFENSE EVASION - extra window memory injection, indirect command execution, obfuscated files or information, Process injection, file deletion.</P>\n<P>&nbsp;</P>\n<P>Great! Now we have three different areas to start within the framework. Using the <A href=\"https://attack.mitre.org/software/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">MITRE ATT&amp;CK Software</A> page we can look up these RATs and gather a more information on how each one behavior falls into these techniques.&nbsp; I've included links below to both the software and easy to read Navigator. I recommend you check out both and use MITRE's sources to further your research.</P>\n<P>&nbsp;</P>\n<P class=\"lia-indent-padding-left-30px\"><A href=\"https://attack.mitre.org/software/S0032/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">Gh0st</A> | <A href=\"https://mitre-attack.github.io/attack-navigator/enterprise/#layerURL=https%3A%2F%2Fattack.mitre.org%2Fsoftware%2FS0032%2FS0032-enterprise-layer.json\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">ATT&amp;CK Navigator</A></P>\n<P class=\"lia-indent-padding-left-30px\"><A href=\"https://attack.mitre.org/software/S0332/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">Remocs</A> | <A href=\"https://mitre-attack.github.io/attack-navigator/enterprise/#layerURL=https%3A%2F%2Fattack.mitre.org%2Fsoftware%2FS0332%2FS0332-enterprise-layer.json\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">ATT&amp;CK Navigator</A></P>\n<P class=\"lia-indent-padding-left-30px\"><A href=\"https://attack.mitre.org/software/S0198/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">NetWire</A> | <A href=\"https://mitre-attack.github.io/attack-navigator/enterprise/#layerURL=https%3A%2F%2Fattack.mitre.org%2Fsoftware%2FS0198%2FS0198-enterprise-layer.json\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">ATT&amp;CK Navigator</A></P>\n<P>&nbsp;</P>\n<P>PERSISTENCE: <BR />All three utilize&nbsp; this tactic by modifying the registry run keys or start up folder in order to maintain persistence on the system. Taking a look at the techniques used by each of these RATs we can see that they all install some new key and value into HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run. [3][5][4]</P>\n<P>&nbsp;</P>\n<P><A href=\"https://orbital.amp.cisco.com/stock/startup_items\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">startup_items </A></P>\n<UL>\n<LI>This will return items that are set to boot at startup. What we really want to see here is the source which shows us the auto-run registry key value. Click on the hyperlink to learn more about startup_items in Orbital.</LI>\n</UL>\n<span class=\"lia-inline-image-display-wrapper lia-image-align-center\" image-alt=\"RAT 1.png\" style=\"width: 999px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/81589iEEE07A345ABABA9F/image-size/large?v=v2&amp;px=999\" role=\"button\" title=\"RAT 1.png\" alt=\"RAT 1.png\" /></span>\n<P>&nbsp;</P>\n<P><A href=\"https://orbital.amp.cisco.com/stock/registry_parameterized_search\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">registry_parameterized_search</A></P>\n<UL>\n<LI>If we wanted to be more specific we can also run a free form search here. This time we will just need to know the specific registry location or if we want to pull a full list and parse this information to a database and pull any anomalies out. But of course, easier said than done. Click on the hyperlink to learn more about registry_parameterized_search in Orbital.</LI>\n</UL>\n<span class=\"lia-inline-image-display-wrapper lia-image-align-center\" image-alt=\"RAT2.png\" style=\"width: 999px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/81590i52CADC6F89983326/image-size/large?v=v2&amp;px=999\" role=\"button\" title=\"RAT2.png\" alt=\"RAT2.png\" /></span>\n<P>&nbsp;</P>\n<P>Using just these two commands we already have sped up or investigation and have identified a specious process and file that we should take a look into. Maybe pulling this file can putting through ThreatGrid can yield useful information. Maybe we can take this file name a put it into SecureX to see if we can paint a bigger picture of what's going on. Using NGFW or ESAs we can see how this malware got in. Using this same method, we can use MITRE ATTACK to isolate what we are looking for and using public threat intelligence we can create filters for the remaining tactics and techniques.</P>\n<P>&nbsp;</P>\n<H1 id=\"toc-hId--569108583\">Wrap Up</H1>\n<P>In conclusion, we have seen how individual RATS behave and while they can be extremely different in their objectives if we pull back and take a look into how a RAT works, how we categorize its behaviors and tactics we can build a profile. Within that profile we can create a default set of quires that can be ran to quickly get an understanding of what's running on your endpoints.&nbsp; Having these profiles will help save your SOC time, increase efficacy, and reduce the complexity of threat hunting.&nbsp;</P>\n<P>&nbsp;</P>\n<P>If it looks like a duck, quacks like a duck it’s probably obfuscated.</P>\n<P>&nbsp;</P>\n<P>Sources:</P>\n<P>[1] <A href=\"https://blog.talosintelligence.com/2020/07/threat-roundup-0724-0731.html\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">https://blog.talosintelligence.com/2020/07/threat-roundup-0724-0731.html</A> 'Win.Dropper.Gh0stRAT-9111297-0'</P>\n<P>[2] <A href=\"https://blog.talosintelligence.com/2020/07/threat-roundup-0710-0717.html\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">https://blog.talosintelligence.com/2020/07/threat-roundup-0710-0717.html</A> 'Win.Trojan.Remcos-8699084-0 and Win.Packed.NetWire-8705629-0'</P>\n<P>[3] <A href=\"https://attack.mitre.org/software/S0332/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">https://attack.mitre.org/software/S0332/</A> 'Remcos'</P>\n<P>[4] <A href=\"https://attack.mitre.org/software/S0032/\" target=\"_self\" rel=\"nofollow noopener noreferrer\">https://attack.mitre.org/software/S0032/</A> 'gh0st RAT'</P>\n<P>[5] <A href=\"https://attack.mitre.org/software/S0198/\" target=\"_self\" rel=\"nofollow noopener noreferrer\">https://attack.mitre.org/software/S0198/</A> 'NETWIRE'</P>\n</DIV>",
        "post_time": "2020-08-14T11:09:19.425-07:00"
      },
      {
        "type": "message",
        "view_href": "https://community.cisco.com/t5/security-documents/orbital-query-corner-hunting-wmi-based-backdoor-mechanisms/ta-p/4127019",
        "subject": "Orbital Query Corner - Hunting WMI based backdoor mechanisms",
        "body": "<DIV class=\"lia-message-template-content-zone\">\n<H1 id=\"toc-hId--1249915659\">The Advisory</H1>\n<P>On July 16&nbsp;2020, the U.K. National Cyber Security Centre and Canada’s Communication Security Establishment, in cooperation with the U.S. National Security Agency and Cybersecurity and Infrastructure Security agency, issued an advisory [0] that the threat actor commonly known as APT29 or “Cozy Bear” was targeting organizations involved in COVID-19 vaccine development.<SPAN>&nbsp;</SPAN></P>\n<P>&nbsp;</P>\n<P>Here in the Query Corner, this got us wondering what sort of interesting Orbital searches we could derive from an advisory like this.<SPAN>&nbsp; </SPAN>You might be wondering that, too –&nbsp;especially if your organization happens to be involved in vaccine research, or has a business or supply chain relationship with another such organization.</P>\n<P>&nbsp;</P>\n<P>As is often the case, the advisory includes an extensive appendix of Indicators of Compromise (IoCs) associated with the threats it describes, so an obvious first step would be to look for those IoCs, including long lists of file hashes and IP addresses, in our own environment.<SPAN>&nbsp; </SPAN>But, of course, we don’t need Orbital queries for that.<SPAN>&nbsp; </SPAN>For one thing, file hashes and IP addresses can easily be handles with AMP blocklists; more to the point, by the time such an advisory is published, the associated hashes and such are usually well known to normal threat intelligence.<SPAN>&nbsp; </SPAN>And in fact, running a quick sample of IoCs through the Talos reputation center [1] shows them already marked as malicious, so there’s no real point in adding them to a customer AMP list after the fact.&nbsp;<span class=\"lia-inline-image-display-wrapper lia-image-align-inline\" image-alt=\"advisory iocs.png\" style=\"width: 653px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/80353i33AC8B54F7E4C96B/image-dimensions/653x383?v=v2\" width=\"653\" height=\"383\" role=\"button\" title=\"advisory iocs.png\" alt=\"advisory iocs.png\" /></span></P>\n<P>&nbsp;</P>\n<P>Great, so we’re done, right?<SPAN>&nbsp; </SPAN>All covered?<SPAN>&nbsp; </SPAN>Well, certainly the known IoCs are now covered by AMP.<SPAN>&nbsp; </SPAN>But remember that the “A” in APT stands for “Advanced” … and the “P” stands for “Persistent”.<SPAN>&nbsp; </SPAN>So what possible steps might such an <STRONG>advanced</STRONG> and <STRONG>persistent</STRONG> opponent try to take, in order to retain their ill-gotten access to your resources, even after their initial points of entry have been discovered and fixed?<SPAN>&nbsp; </SPAN>Suppose we had been targeted by APT29, and at some point they did get in?<SPAN>&nbsp; </SPAN>Now Talos, and therefore also AMP, has coverage for the indicators in the advisory, but is there something still lurking inside?</P>\n<H1 id=\"toc-hId-1237597174\">The Hunt</H1>\n<P><SPAN>A great starting point for understanding more about a specific threat group is the MITRE ATT&amp;CK project.&nbsp; ATT&amp;CK is much more than just a laundry list of tactics and techniques; the true value of the project comes in its application to actual threat actors.&nbsp;[2]&nbsp;</SPAN></P>\n<P>Reviewing the entry for APT29, we see that a number of specific techniques are known to be used by the group, including a few that specifically relate to <STRONG>persistence</STRONG>.</P>\n<P>&nbsp;</P>\n<P><SPAN>The one that caught our eye as an interesting candidate for an Orbital search involves the use of Microsoft’s Windows Management Instrumentation (WMI).&nbsp; In Microsoft’s own words, WMI is “the infrastructure for management data and operations on Windows-based operating systems.” [3]&nbsp;</SPAN>It is ubiquitous in Windows environments and used to automate system management tasks, especially in response to events.<SPAN>&nbsp; </SPAN>Using WMI event filters, actions can be taken automatically in response to specific system events.</P>\n<P>&nbsp;</P>\n<P>Okay, but what does all that have to do with attack persistence?<SPAN>&nbsp; </SPAN>Well, an attacker with sufficient access to a Windows system can use WMI to set up automated actions with a more nefarious purpose.<SPAN>&nbsp; </SPAN>For example, a WMI event filter could look for a login failure message for a specific user, and then open a reverse shell listening on a specific port when the failure occurs.</P>\n<P>In other words, if we change the password on a compromised account in order to lock the attacker out, the very fact of the attacker’s next failed attempt will open up a back door to let the attacker back in!<SPAN>&nbsp; </SPAN>Not only that, but it’s the operating system’s own core functionality which is being turned against us, and in a somewhat obscure corner of Windows arcana that most people probably aren’t watching very closely, if at all.</P>\n<H1 id=\"toc-hId--569857289\">The Queries</H1>\n<P>Well, that certainly does sound like an opportunity for an Orbital query!<SPAN>&nbsp; </SPAN>And fortunately, a quick search for WMI-related Threat Hunting queries at the Orbital catalog shows that we do have some relevant items ready to use.</P>\n<P>&nbsp;</P>\n<P><span class=\"lia-inline-image-display-wrapper lia-image-align-inline\" image-alt=\"catalog wmi.png\" style=\"width: 999px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/80354iEC3AE2B416E8807D/image-size/large?v=v2&amp;px=999\" role=\"button\" title=\"catalog wmi.png\" alt=\"catalog wmi.png\" /></span></P>\n<P>&nbsp;</P>\n<P>But wait – WMI is a perfectly legitimate management tool.<SPAN>&nbsp; </SPAN>How can we tell the good from the bad here?<SPAN>&nbsp; </SPAN>Part of the answer lies in <STRONG>knowing what “normal” is in your environment</STRONG>.<SPAN>&nbsp;</SPAN></P>\n<P>&nbsp;</P>\n<P>To see that, we will use the wmi_event_filters_monitoring query from the catalog to see what things look like on a freshly installed Windows 10 desktop running in Azure.<SPAN>&nbsp; </SPAN>There’s a single event log filter installed, looking for Service Control Manager (SCM) events.</P>\n<P>&nbsp;</P>\n<P><span class=\"lia-inline-image-display-wrapper lia-image-align-inline\" image-alt=\"event query clean.png\" style=\"width: 999px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/80355i9DC80DAE02714208/image-size/large?v=v2&amp;px=999\" role=\"button\" title=\"event query clean.png\" alt=\"event query clean.png\" /></span></P>\n<P>&nbsp;</P>\n<P>WMI event filters by themselves aren’t the whole story, of course. <SPAN>&nbsp;</SPAN>Generally, an event filter will be bound to a “consumer” to handle it.<SPAN>&nbsp; </SPAN>At this time, there isn’t an Orbital catalog query to see the bindings, but it turns out that this query is so simple, it hardly matters.<SPAN>&nbsp; </SPAN></P>\n<P>&nbsp;</P>\n<P><span class=\"lia-inline-image-display-wrapper lia-image-align-inline\" image-alt=\"event query custombinding.png\" style=\"width: 400px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/80356i4A86913397420654/image-size/medium?v=v2&amp;px=400\" role=\"button\" title=\"event query custombinding.png\" alt=\"event query custombinding.png\" /></span></P>\n<P>Just drop “SELECT * FROM wmi_filter_consumer_binding” into the Custom SQL window, and we’ll see that the SCM event filter binds to NTEventLogEventConsumer, or to put that in short prose, it logs the event to the Application event log.<SPAN>&nbsp; </SPAN>Not very exciting, right?</P>\n<P>&nbsp;</P>\n<P>Well, compare that to the same event filter query, but now we run it after adding an event similar to the backdoor scenario described above.</P>\n<P>&nbsp;</P>\n<P><span class=\"lia-inline-image-display-wrapper lia-image-align-inline\" image-alt=\"event query filter.png\" style=\"width: 999px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/80357iC6BCFBABD90D4D1E/image-size/large?v=v2&amp;px=999\" role=\"button\" title=\"event query filter.png\" alt=\"event query filter.png\" /></span></P>\n<P>&nbsp;</P>\n<P>That “xyzFilter” is filtering for log events with an ID of 4625, which is a failed logon attempt, and it’s also searching for “BOB”.<SPAN>&nbsp; </SPAN>But wait – why do we care if user BOB fails to log in?<SPAN>&nbsp; </SPAN>Do we even <EM>have</EM> a “BOB” on this system?<SPAN>&nbsp; </SPAN>What’s up with that?</P>\n<P>&nbsp;</P>\n<P>To drill deeper, let’s see what happens if that event does trigger.<SPAN>&nbsp; </SPAN>For that, we’ll pull another query out of the Orbital catalog, namely wmi_cli_event_consumers_monitoring.</P>\n<P><span class=\"lia-inline-image-display-wrapper lia-image-align-inline\" image-alt=\"event query netcat.png\" style=\"width: 999px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/80358iE76305D607E97E6C/image-size/large?v=v2&amp;px=999\" role=\"button\" title=\"event query netcat.png\" alt=\"event query netcat.png\" /></span></P>\n<P>Whoa!<SPAN>&nbsp; </SPAN>That sets up a reverse shell using netcat, listening on a funny TCP port.<SPAN>&nbsp; </SPAN>That’s not right! &nbsp;And who left netcat lying around on this system, anyway?<SPAN>&nbsp; </SPAN>Looks like it might be time to take a closer look at that endpoint, and maybe hit the “Start Isolation” button, while we're at it.</P>\n<P>&nbsp;</P>\n<H1 id=\"toc-hId-1917655544\">The Links</H1>\n<P>[0]&nbsp;<SPAN><A href=\"https://media.defense.gov/2020/Jul/16/2002457639/-1/-1/0/NCSC_APT29_ADVISORY-QUAD-OFFICIAL-20200709-1810.PDF\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">https://media.defense.gov/2020/Jul/16/2002457639/-1/-1/0/NCSC_APT29_ADVISORY-QUAD-OFFICIAL-20200709-1810.PDF</A></SPAN></P>\n<P>[1]&nbsp;<A href=\"https://talosintelligence.com/reputation\" target=\"_self\" rel=\"nofollow noopener noreferrer\">https://talosintelligence.com/reputation</A></P>\n<P>[2]&nbsp;<SPAN><A href=\"https://attack.mitre.org/groups/G0016/\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">https://attack.mitre.org/groups/G0016/</A></SPAN></P>\n<P><SPAN>[3]&nbsp;</SPAN><SPAN><A href=\"https://docs.microsoft.com/en-us/windows/win32/wmisdk/wmi-start-page\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">https://docs.microsoft.com/en-us/windows/win32/wmisdk/wmi-start-page</A></SPAN></P>\n</DIV>",
        "post_time": "2020-07-30T10:26:24.233-07:00"
      },
      {
        "type": "message",
        "view_href": "https://community.cisco.com/t5/security-blogs/orbital-query-corner-helping-you-use-orbital-advanced-search/ba-p/4119327",
        "subject": "Orbital Query Corner - Helping you use Orbital Advanced Search quickly",
        "body": "<P>Greetings Endpoint Security folks!</P>\n<P>We've started something new in the Community designed to help you get up to speed with Orbital Advanced Search - we call it the \"Query Corner\". Our team will be posting short stories around the Orbital query catalog, and how you can use it to drive your Threat Hunts, perform IT and Compliance checks, push Incident Investigation, and more.</P>\n<P>We look forward to hearing from you on the things we publish, discussing how to use Orbital directly as a tool to understand your managed fleet of systems, and how it enables faster response inside of&nbsp;AMP for Endpoints.</P>\n<P>Since this us just an intro post, let's get you to the links:</P>\n<P>First query corner post:</P>\n<P><A href=\"https://community.cisco.com/t5/security-documents/orbital-query-corner-why-does-malware-keep-coming-back/ta-p/4118854\" target=\"_blank\">https://community.cisco.com/t5/security-documents/orbital-query-corner-why-does-malware-keep-coming-back/ta-p/4118854</A></P>\n<P>If you need a quick primer on Orbital, how to enable it, and a short walk-around of the UI, check out the tutorials inside the Cisco Learning Network:</P>\n<P><A href=\"https://learningnetwork.cisco.com/s/learning-plan-detail-standard?ltui__urlRecordId=a1c3i0000007i0IAAQ&amp;ltui__urlRedirect=learning-plan-detail-standard\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">https://learningnetwork.cisco.com/s/learning-plan-detail-standard?ltui__urlRecordId=a1c3i0000007i0IAAQ&amp;ltui__urlRedirect=learning-plan-detail-standard</A></P>\n<P>I look forward to chatting with you in the Endpoint Security Community board,<BR />ELH</P>",
        "post_time": "2020-07-15T09:50:38.312-07:00"
      },
      {
        "type": "message",
        "view_href": "https://community.cisco.com/t5/security-documents/orbital-query-corner-why-does-malware-keep-coming-back/ta-p/4118854",
        "subject": "Orbital Query Corner - Why does $malware keep coming back?",
        "body": "<DIV class=\"lia-message-template-symptoms-zone\">\n<H2 id=\"toc-hId-1247214355\">Symptoms</H2>\n<P>It’s happened to many of us, many times. We are alerted to an outbreak of malware in our networks, and begin the process of verification, remediation, system clean-up, etc – only to see the same thing reappear in our consoles as soon as we give users access to their systems again. What’s next? Wash, rinse, repeat.</P>\n</DIV>\n<DIV class=\"lia-message-template-diagnosis-zone\">\n<H2 id=\"toc-hId--560240108\">Diagnosis</H2>\n<P>In “Exploiting the Rootkit Paradox with Windows Memory Analysis”, Jesse Kornblum made two very powerful points that ring true today.</P>\n<P>All rootkits obey two basic principles:</P>\n<OL>\n<LI>They want to remain hidden.</LI>\n<LI>They need to run.</LI>\n</OL>\n<P>While he applied these statements to rootkits, it has proven true time and time again, that the same statements apply across many malware variants. In other words, the same is yet true today. Malware needs to run, and malware authors want their toolkit to remain hidden.</P>\n<P>This behavior technique [remaining hidden] gives attackers a persistent presence in an environment and can be delivered through several means. A _very short_ list includes:</P>\n<UL>\n<LI>Programs that execute from temporary or cache folders,</LI>\n<LI>Programs that execute from user profiles,</LI>\n<LI>Programs stored as Alternate Data Streams [0].</LI>\n</UL>\n<P>This query corner doesn’t provide us space to dig into all of the possible ways attackers hide their work, or methods of detection – but a quick win could be to keep an eye on users Roaming Profiles, for signs of non-standard executables and/or scripts. Such a tactic could be used to ensure compromise follows a user after systems are cleaned, or re-imaged.</P>\n<H2 id=\"toc-hId-1927272725\">Solution</H2>\n<P>This query corner doesn’t provide us space to dig into all of the possible ways attackers hide their work, or methods of detection – but a quick win could be to keep an eye on users Roaming Profiles, for signs of non-standard executables and/or scripts. Such a tactic could be used to ensure compromise follows a user after systems are cleaned, or re-imaged.</P>\n<P>The catalog query called “Scheduled Task Search” [1] is designed to retrieve data for the list of scheduled tasks, per host. By default this query will return all scheduled tasks, but has options to focus the query on a particular path which can point to anomalous scripts or executables that could be indicative of unwanted applications, or actual malware.</P>\n<OL>\n<OL>\n<LI><STRONG>Run the baseline query first, to ensure data is retrieved from your hosts</STRONG></LI>\n<LI>Configure the Scheduled Task Search parameter named “task_action” to look at roaming profiles, and run your focused query<span class=\"lia-inline-image-display-wrapper lia-image-align-center\" image-alt=\"Screen Shot 2020-07-15 at 12.05.31 PM.png\" style=\"width: 507px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/79126i3F4441AC45336391/image-size/large?v=v2&amp;px=999\" role=\"button\" title=\"Screen Shot 2020-07-15 at 12.05.31 PM.png\" alt=\"Screen Shot 2020-07-15 at 12.05.31 PM.png\" /></span>If your focused query returns no results – we have at least answered that question. If you would like to monitor this space on a recurring bassis, save this query as a Scheduled Job, and let Orbital background query your hosts and use the results to pick up a change in the environment<BR /><span class=\"lia-inline-image-display-wrapper lia-image-align-center\" image-alt=\"Screen Shot 2020-07-15 at 12.26.20 PM.png\" style=\"width: 733px;\"><img src=\"https://community.cisco.com/t5/image/serverpage/image-id/79129i86EE1A6C71A9BC86/image-size/large?v=v2&amp;px=999\" role=\"button\" title=\"Screen Shot 2020-07-15 at 12.26.20 PM.png\" alt=\"Screen Shot 2020-07-15 at 12.26.20 PM.png\" /></span><BR />The first time you see a change in the results we may have some work to do, based on the query results.\n<P>If you've found this first version of the Query Corner useful, we will continue to dig deeper in the Endpoint Security discussion boards here on the Community site. Watch this space to see what comes next!<BR /><BR />Links for references above:</P>\n0. <A href=\"https://docs.microsoft.com/en-us/sysinternals/downloads/streams\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">https://docs.microsoft.com/en-us/sysinternals/downloads/streams</A><BR />1. <A href=\"https://orbital.amp.cisco.com/stock/scheduled_tasks_param_search\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">https://orbital.amp.cisco.com/stock/scheduled_tasks_param_searc</A>\n<P>&nbsp;</P>\n</LI>\n</OL>\n</OL>\n<P>&nbsp;</P>\n</DIV>",
        "post_time": "2020-07-15T09:32:40.280-07:00"
      }
    ]
  },
  "metadata": {}
}
